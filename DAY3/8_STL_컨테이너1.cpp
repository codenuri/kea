// 4_STL_컨테이너1.cpp 184 ~
#include <iostream>
#include <vector>

int main()
{
	// 배열   : 크기를 변경할수 없다. 연속된 메모리
	// vector : 크기를 변경할수 있다. 연속된 메모리, 배열과 사용법 거의 동일
	int x[5] = { 1,2,3,4,5 };


	std::vector<int> v = { 1,2,3,4,5 };

	// 배열과 vector 는 사용법이 거의 동일 합니다.
	std::cout << x[0] << std::endl; // [] 연산자 사용가능
	std::cout << v[0] << std::endl; // [] 연산자 사용가능


	// 하지만 vector 가 배열 보다 편리합니다.
	// 배열   : 크기를 변경할수 없다.
	// vector : 크기 변경도 가능하고, 다양한 멤버 함수가 있어서 편리하다
	v.resize(10);

	std::cout << v.size() << std::endl; // 10
}

// 성능
// 배열   : 지역변수로 만들면 stack 사용
// vector : 힙을 할당해서 데이타 보관

// 요소에 대한 접근은 거의 동일합니다
// 하지만 생성시 차이가 좀 있습니다
// 배열 : 스택 할당은 연속적으로 사용하므로 오버헤드 없습니다
// vector : 힙에서 빈공간을 찾아야 하므로 약간의 지연 발생
